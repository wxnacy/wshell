#!/usr/bin/env bash

WSHELL_HOME=${HOME}/.wshell
CMD=$1
ARGS=($@)

OS=`${0/%wshell/system\/check}`
OSS=(${OS})
SYS=${OSS[0]}
VER=${OSS[1]}

help(){
    echo 'wshell 1.0.0'
    echo 'Usage: wshell <command> [<args>]'
    echo ''
    echo 'Some useful Wshell commands are:'

    echo '  update      update the wshell version'
    echo '  install     Install software by name'
    echo '  mysql       run mysql shell'
    # echo 'See `wshell help <command>` for information on a specific command.'
    # echo 'For full documentation, see: https://github.com/yyuu/pyenv#readme'
}

update(){
    NPWD=${PWD}
    cd ${HOME}/.wshell
    git pull
    cd ${NPWD}
}

check(){
    echo "Your system are: ${OS}"
    notinstall=''
    echo -e '\nInstall:'
    for i in  gcc g++ make cmake git vim wget unzip expect openssl c++ ack \
        htop http dig pyenv python java mysql docker nginx ;do
        path=`command -v $i`
        if [ $path ];then
            echo -e "$i\tinstall on $path"
        else
            notinstall="$i $notinstall"
        fi
    done


    for i in nvm wvim;do
        if [ -d $HOME/.$i ];then
            echo -e "$i \tinstall on $HOME/.$i"
        else
            notinstall="$i $notinstall"
        fi
    done

    echo -e '\nNot install:'
    echo -e "\t$notinstall"
    echo 'You can use command:'
    echo -e '\twshell <package> install'
    echo 'To install package. '
}

install(){
    SH=${0/%wshell/${1}/${2}}
    if [ -f $SH ];then
        $SH
    else
        SH=${0/%wshell/${2}/${1}}
        if [ -f $SH ];then
            $SH
        else
            help
        fi
    fi
}

other(){
    SH=${0/%wshell/${1}/${2}}
    if [ -f $SH ];then
        $SH
    else
        help
    fi
}

case "$1" in
    update)   update;;
    check)   check;;
    install)   install $1 $2;;
    help)  help;;
    -h)  help;;
    *)       other $1 $2 $3;;
esac


